from . import menu
import sqlite3
from PySide6.QtWidgets import QMessageBox
from PySide6.QtWidgets import QDialog, QListWidget, QVBoxLayout
from design.py_design.read_task_active_window import Ui_Dialog
class ActiveComletedTaskWindow(QDialog):
    def __init__(self):
        super().__init__()
        self.ui = Ui_Dialog()#–°–æ–∑–¥–∞—ë–º UI
        self.ui.setupUi(self)#–ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º UI –∫ —Ç–µ–∫—É—â–µ–º—É –æ–∫–Ω—É
        self.read_task()# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    def read_task(self):
        self.ui.active_task_wid.clear()
        con = sqlite3.connect("ToDoList.db")
        c = con.cursor()
        c.execute("SELECT * from task WHERE status = 'active'")
        task = c.fetchall()
        con.commit()
        con.close()
        if not task:
            task_text = "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á. –î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—É—é! üòä"
            self.ui.active_task_wid.addItem(task_text)
        else:
            for index, item in enumerate(task):
                deadline = "–±–µ—Å–∫–æ–Ω–µ—á–Ω–æ" if item[4] is None else item[5]
                task_text = f"{index+1}) {item[1]} ‚Äî –¥–æ–±–∞–≤–ª–µ–Ω–æ: {item[3]} | —Å—Ä–æ–∫: {deadline}"
                self.ui.active_task_wid.addItem(task_text)